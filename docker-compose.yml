version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: uvicorn bittensor_async_app.main:app --host 0.0.0.0 --port 8000
    environment:
      - IS_DOCKER=true
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - API_TOKEN=${API_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES}
      - DATURA_API_KEY=${DATURA_API_KEY}
      - CHUTES_API_KEY=${CHUTES_API_KEY}
      - WALLET_MNEMONIC=${WALLET_MNEMONIC}
      - WALLET_HOTKEY=${HOTKEY}
      - NETUID=${NETUID}
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
      - db
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    # Update to use the root-level celery_worker.py file
    command: celery -A celery_worker worker --loglevel=info
    environment:
      - IS_DOCKER=true
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - API_TOKEN=${API_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES}
      - DATURA_API_KEY=${DATURA_API_KEY}
      - CHUTES_API_KEY=${CHUTES_API_KEY}
      - WALLET_MNEMONIC=${WALLET_MNEMONIC}
      - WALLET_HOTKEY=${HOTKEY}
      - NETUID=${NETUID}
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
      - db
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-bittensor}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
  redis_data: